<?php

use App\Enums\Acl;
use App\Enums\Role;
use Facades\Tests\Setup\ClipFactory;
use Illuminate\Database\Eloquent\Relations\MorphToMany;

use function Pest\Laravel\get;

beforeEach(function () {
    // TODO: Change the autogenerated stub
    $this->clip = ClipFactory::withAssets(2)->create(['password' => '1234qweR']);
});

it('has an acl method for model', function () {
    expect($this->clip->acls())->toBeInstanceOf(MorphToMany::class);
});

it('can add acls to model', function () {
    $this->clip->addAcls(collect([Acl::PASSWORD(), Acl::PORTAL()]));

    expect($this->clip->acls()->count())->toEqual(2);
});

it('check object portal acl', function () {
    $this->clip->addAcls(collect([Acl::PORTAL()]));
    $this->clip->refresh();

    expect($this->clip->checkAcls())->toBeFalse();

    signIn();
    expect($this->clip->checkAcls())->toBeTrue();

    auth()->logout();
});

it('check object acl for admins', function () {
    $this->clip->addAcls(collect([Acl::PORTAL()]));
    expect($this->clip->checkAcls())->toBeFalse();

    signInRole(Role::ADMIN);
    expect(($this->clip->checkAcls()))->toBeTrue();

    auth()->logout();
});

it('check object lms acl', function () {
    $this->clip->addAcls(collect([Acl::LMS()]));
    $this->clip->refresh();

    expect($this->clip->checkAcls())->toBeFalse();

    // generate session token cookie for test to pass
    get(getAccessToken($this->clip, dechex(time()), Acl::LMS->lower(), true));
    expect($this->clip->checkAcls())->toBeTrue();
});

it('check object password acl', function () {
    $this->clip->addAcls(collect([Acl::PASSWORD()]));
    $this->clip->refresh();

    expect($this->clip->checkAcls())->toBeFalse();

    get(getAccessToken($this->clip, dechex(time()), Acl::PASSWORD->lower(), true));
    expect($this->clip->checkAcls())->toBeTrue();
});
