<?php

use App\Events\AssetDeleted;
use App\Models\Asset;
use App\Models\Clip;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Support\Facades\Event;

uses()->group('unit');

beforeEach(function () {
    // TODO: Change the autogenerated stub
    $this->asset = Asset::factory()->create();
});

it('has a path', function () {
    expect($this->asset->path())->toEqual('/admin/assets/'.$this->asset->id);
});

it('belongs to a clip', function () {
    expect($this->asset->clip)->toBeInstanceOf(Clip::class);
});

it('has many statistics logs', function () {
    expect($this->asset->statsLogs())->toBeInstanceOf(HasMany::class);
});

it('has many statistic counter', function () {
    expect($this->asset->statsCounter())->toBeInstanceOf(HasMany::class);
});

test('delete an asset will fire an event', function () {
    Event::fake();
    $this->asset->delete();

    Event::assertDispatched(AssetDeleted::class);
});

it('has a duration in hour format', function () {
    expect($this->asset->durationToHours())->toEqual(gmdate('H:i:s', $this->asset->duration));
});

it('has a download path', function () {
    expect($this->asset->downloadPath())->toBeString();
});

it('has video format scope', function () {
    expect(Asset::FormatVideo())->toBeInstanceOf(Builder::class);
});

it('has audio format scope', function () {
    expect(Asset::FormatAudio())->toBeInstanceOf(Builder::class);
});
