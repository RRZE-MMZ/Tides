<?php

use App\Events\AssetDeleted;
use App\Models\Asset;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphToMany;
use Illuminate\Support\Facades\Event;

uses()->group('unit');

beforeEach(function () {
    // TODO: Change the autogenerated stub
    $this->asset = Asset::factory()->create();
});

it('may have many clips', function () {
    expect($this->asset->clips())->toBeInstanceOf(MorphToMany::class);
});

it('has many statistics logs', function () {
    expect($this->asset->viewLog())->toBeInstanceOf(HasMany::class);
});

it('has many statistic counter', function () {
    expect($this->asset->viewCount())->toBeInstanceOf(HasMany::class);
});

test('delete an asset will fire an event', function () {
    Event::fake();
    $this->asset->delete();

    Event::assertDispatched(AssetDeleted::class);
});

it('has a duration in hour format', function () {
    expect($this->asset->durationToHours())->toEqual(gmdate('H:i:s', $this->asset->duration));
});

it('has a download path', function () {
    expect($this->asset->downloadPath())->toBeString();
});

it('has video format scope', function () {
    expect(Asset::FormatVideo())->toBeInstanceOf(Builder::class);
});

it('has audio format scope', function () {
    expect(Asset::FormatAudio())->toBeInstanceOf(Builder::class);
});

it('has smil format scope', function () {
    expect(Asset::FormatSmil())->toBeInstanceOf(Builder::class);
});
