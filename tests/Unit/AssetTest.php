<?php


namespace Tests\Unit;

use App\Events\AssetDeleted;
use App\Models\Asset;
use App\Models\Clip;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Storage;
use Tests\TestCase;

class AssetTest extends TestCase
{
    use RefreshDatabase;

    private Asset $asset;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        
        $this->asset = Asset::factory()->create();
    }

    /** @test */
    public function it_has_a_path(): void
    {
        $this->assertEquals('/admin/assets/' . $this->asset->id, $this->asset->path());
    }

    /** @test */
    public function it_belongs_to_a_clip(): void
    {
        $this->assertInstanceOf(Clip::class, $this->asset->clip);
    }

    /** @test */
    public function delete_an_asset_will_fire_an_event(): void
    {
        Event::fake();

        $this->asset->delete();

        Event::assertDispatched(AssetDeleted::class);
    }

    /** @test */
    public function it_has_a_duration_in_hour_format(): void
    {
        $this->assertEquals(gmdate("H:i:s", $this->asset->duration), $this->asset->durationToHours());
    }

    /** @test */
    public function it_has_a_download_path(): void
    {
        Storage::fake('videos');

        $this->assertEquals(
            storage_path() . '/framework/testing/disks/videos/TIDES_TEST_CLIP/video.mp4',
            $this->asset->downloadPath()
        );

        $this->assertIsString($this->asset->downloadPath());
    }
}
