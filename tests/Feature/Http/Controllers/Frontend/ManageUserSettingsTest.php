<?php

namespace Tests\Feature\Http\Controllers\Frontend;

use App\Models\Setting;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ManageUserSettingsTest extends TestCase
{
    use RefreshDatabase;
    use WithFaker;

    private Setting $userSettings;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->signIn();

        $this->userSettings = auth()->user()->settings();
    }

    /** @test */
    public function it_shows_sidebar_user_menu_for_my_portal(): void
    {
        $this->acceptUseTerms();

        $this->get(route('frontend.userSettings.edit'))
            ->assertViewIs('frontend.myPortal.userSettings.edit')
            ->assertSee('Portal settings')
            ->assertSee('Series subscriptions');
    }

    /** @test */
    public function it_shows_user_settings(): void
    {
        $this->acceptUseTerms();

        $this->get(route('frontend.userSettings.edit'))
            ->assertViewIs('frontend.myPortal.userSettings.edit')
            ->assertViewHas(['settings'])
            ->assertSee('Portal language')
            ->assertSee('Show subscriptions on homepage');
    }

    /** @test */
    public function it_shows_an_error_if_language_is_other_than_en_or_de(): void
    {
        $this->acceptUseTerms();

        $attributes = [
            'language' => 'fr',
            'show_subscriptions_to_home_page' => 'on',
        ];

        $this->put(route('frontend.userSettings.update'), $attributes)->assertSessionHasErrors(['language']);
    }

    /** @test */
    public function it_updates_user_settings(): void
    {
        $this->assertDatabaseHas('settings', [
            'name' => auth()->user()->username,
            'data' => json_encode(config('settings.user')), ]);

        $this->acceptUseTerms();

        $this->userSettings->refresh();

        $attributes = [
            'language' => 'en',
            'show_subscriptions_to_home_page' => 'on',
        ];

        $this->put(route('frontend.userSettings.update'), $attributes);

        $this->assertDatabaseHas('settings', [
            'name' => auth()->user()->username,
            'data' => json_encode([
                'accept_use_terms' => true,
                'language' => 'en',
                'show_subscriptions_to_home_page' => true,
            ]),
        ]);
    }

    /*
     * Helper functions
     *
     */
    private function acceptUseTerms()
    {
        $this->put(route('frontend.acceptUseTerms'), ['accept_use_terms' => 'on']);
    }
}
