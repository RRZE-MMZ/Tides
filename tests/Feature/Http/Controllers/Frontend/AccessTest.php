<?php

namespace Tests\Feature\Http\Controllers\Frontend;

use App\Enums\Acl;
use App\Models\Clip;
use Facades\Tests\Setup\ClipFactory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AccessTest extends TestCase
{
    use RefreshDatabase;

    private Clip $clip;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->clip = ClipFactory::withAssets(2)->create(['password' => '1234qwER']);
    }

    /** @test */
    public function a_clip_can_be_only_accessable_for_logged_in_users(): void
    {
        //assign portal acl
        $this->clip->addAcls(collect([Acl::PORTAL()]));

        $this->get(route('frontend.clips.show', $this->clip))->assertDontSee('plyr-player');

        $this->signIn();

        $this->get(route('frontend.clips.show', $this->clip))->assertSee('plyr-player');
    }

    /** @test */
    public function a_clip_can_be_only_accessable_for_lms_users(): void
    {
        $this->clip->addAcls(collect([Acl::LMS()]));

        $client = getUrlClientType(Acl::LMS->lower());

        $this->get(route('frontend.clips.show', $this->clip))->assertDontSee('plyr-player');

        $time = dechex(time());

        $token = md5('clip'.'1'.$this->clip->password.'0.0.0.0'.$time.$client);

        $link = '/protector/link/clip/1/'.$token.'/'.$time.'/'.$client;

        $this->get($link)->assertForbidden();

        $token = md5('clip'.'1'.$this->clip->password.'127.0.0.1'.$time.$client);

        $link = '/protector/link/clip/1/'.$token.'/'.$time.'/'.$client;

        $this->get($link)->assertStatus(302);

        $this->get(route('frontend.clips.show', $this->clip))->assertSee('plyr-player');
    }

    /** @test */
    public function a_lms_clip_is_accessable_for_clip_owner(): void
    {
        $this->clip->addAcls(collect([Acl::LMS()]));

        $this->get(route('frontend.clips.show', $this->clip))->assertDontSee('plyr-player');

        $this->actingAs($this->clip->owner);

        $this->get(route('frontend.clips.show', $this->clip))->assertSee('plyr-player');
    }

    /** @test */
    public function a_lms_clip_is_accessable_for_admin(): void
    {
        $this->clip->addAcls(collect([Acl::LMS()]));

        $this->get(route('frontend.clips.show', $this->clip))->assertDontSee('plyr-player');

        $this->signInRole('admin');

        $this->get(route('frontend.clips.show', $this->clip))->assertSee('plyr-player');
    }
}
