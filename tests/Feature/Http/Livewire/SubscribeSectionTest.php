<?php

namespace Tests\Feature\Http\Livewire;

use App\Http\Livewire\SubscribeSection;
use App\Models\Series;
use Facades\Tests\Setup\SeriesFactory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Livewire\Livewire;
use Tests\TestCase;

class SubscribeSectionTest extends TestCase
{
    use RefreshDatabase;

    protected Series $series;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->signIn();

        $this->series = SeriesFactory::withClips(1)->withAssets(3)->create();
    }

    /** @test */
    public function it_does_not_contain_subscribe_section_for_non_logged_in_users(): void
    {
        auth()->logout();

        $this->get(route('frontend.series.show', $this->series))->assertDontSeeLivewire('subscribe-section');
    }

    /** @test */
    public function it_does_contain_subscribe_section_for_logged_in_users(): void
    {
        $this->get(route('frontend.series.show', $this->series))->assertSeeLivewire('subscribe-section');
    }

    /** @test */
    public function it_can_subscribe_a_user_to_a_series(): void
    {
        $this->assertDatabaseMissing('series_subscriptions', [
            'user_id' => auth()->user()->id,
            'series_id' => $this->series->id,
        ]);

        Livewire::test(SubscribeSection::class, [
            'series' => $this->series,
        ])->call('subscribe');

        $this->assertDatabaseHas('series_subscriptions', [
            'user_id' => auth()->user()->id,
            'series_id' => $this->series->id,
        ]);
    }

    /** @test */
    public function it_can_unsubscribe_a_user_from_a_serries(): void
    {
        auth()->user()->subscriptions()->attach($this->series);

        $this->assertDatabaseHas('series_subscriptions', [
            'user_id' => auth()->user()->id,
            'series_id' => $this->series->id,
        ]);

        Livewire::test(SubscribeSection::class, [
            'series' => $this->series,
        ])->call('unsubscribe');

        $this->assertDatabaseMissing('series_subscriptions', [
            'user_id' => auth()->user()->id,
            'series_id' => $this->series->id,
        ]);
    }
}
