<?php

namespace Tests\Feature\Console\Commands;

use App\Models\Clip;
use Facades\Tests\Setup\SeriesFactory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class ReorderPosterImagesTest extends TestCase
{
    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Storage::fake('player_previews');
        Storage::fake('thumbnails');

        Storage::makeDirectory('player_previews/');
    }

    /** @test */
    public function it_skips_clip_with_no_assets(): void
    {
        $clip = Clip::factory()->create();

        $this->artisan('clip:posterImage')->expectsOutput("Assets not found for Clip ID {$clip->id}! Skipping...");
    }

    /** @test */
    public function it_skips_folder_creation_if_clip_has_no_assets(): void
    {
        Clip::factory()->create();
        $this->artisan('clip:posterImage');

        $this->assertEmpty(Storage::disk('thumbnails')->directories());
    }

    /** @test */
    public function it_updated_clip_poster_path(): void
    {
        UploadedFile::fake()->create('1_preview.jpg', 100)->storeAs('player_previews', '1_preview.jpg');
        Storage::assertExists('player_previews');

        $series = SeriesFactory::withClips(4)->withAssets(4)->create();

        $this->assertNull($series->clips->first()->posterImage);

        $this->artisan('clip:posterImage')->expectsOutput("Finish clip ID {$series->clips->first()->id}");

        $series->refresh();

        $this->assertNotNull($series->clips->first()->posterImage);
    }
}
