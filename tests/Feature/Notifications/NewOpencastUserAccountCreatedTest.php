<?php

namespace Tests\Feature\Notifications;

use App\Enums\Role;
use App\Models\User;
use App\Notifications\NewOpencastUserAccountCreated;
use App\Services\OpencastService;
use GuzzleHttp\Handler\MockHandler;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\Setup\WorksWithOpencastClient;
use Tests\TestCase;

class NewOpencastUserAccountCreatedTest extends TestCase
{
    use RefreshDatabase;
    use WorksWithOpencastClient;

    private MockHandler $mockHandler;

    private OpencastService $opencastService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        \Notification::fake();
        $this->mockHandler = $this->swapOpencastClient();

        $this->opencastService = app(OpencastService::class);
    }

    /** @test */
    public function it_notifies_user_to_opencast_account_creation_if_role_changes(): void
    {
        $this->signInRole(Role::ADMIN);

        $this->mockHandler->append($this->mockCreateAdminUserResponse());

        $this->patch((route('users.update', $user = User::factory()->create())), [
            'role_id' => Role::ASSISTANT(),
        ])->assertRedirect();

        \Notification::assertSentTo([$user], NewOpencastUserAccountCreated::class);
    }
}
