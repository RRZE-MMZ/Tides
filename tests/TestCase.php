<?php

namespace Tests;

use App\Models\Acl;
use App\Models\Organization;
use App\Models\Role;
use App\Models\Semester;
use App\Models\User;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Acl::create([
            'name'        => 'intern',
            'description' => 'Material is accessed via portal log in',
        ]);

        Acl::create([
            'name'        => 'lms',
            'description' => 'Material is accessed via LMS (moodle, Ilias, etc.) log in',
        ]);

        Acl::create([
            'name'        => 'password',
            'description' => 'Material is accessed via a password',
        ]);

        Semester::create([
            'name'        => 'Sommersemester 2021',
            'acronym'     => 'S21',
            'short_title' => '2021',
            'start_date'  => '2021-04-01 00:00:00',
            'stop_date'   => '2022-09-30 23:59:59',
        ]);

        Semester::create([
            'name'        => 'Wintersemester 2021/2022',
            'acronym'     => 'W21',
            'short_title' => '2021/2022',
            'start_date'  => '2021-10-01 00:00:00',
            'stop_date'   => '2022-03-31 23:59:59',
        ]);

        Organization::create([
            'org_id'             => 1,
            'name'               => 'Tides organization unit',
            'parent_org_id'      => 1,
            'orgno'              => '0000000000',
            'shortname'          => 'Main organization unit',
            'staff'              => null,
            'startdate'          => now(),
            'operationstartdate' => now(),
            'operationenddate'   => '2999-12-31',
            'created_at'         => now(),
            'updated_at'         => null,
        ]);

        Role::create([
            'name' => 'superadmin',
        ]);

        Role::create([
            'name' => 'admin',
        ]);

        Role::create([
            'name' => 'moderator',
        ]);

        Role::create([
            'name' => 'assistant',
        ]);

        Role::create([
            'name' => 'user',
        ]);

    }

    /**
     * @param User|null $user
     * @return User
     */
    protected function signIn(User $user = null): User
    {
        $user = $user ?: User::factory()->create();

        $this->actingAs($user);

        return $user;
    }

    /**
     * @param User $user
     * @param string $role
     * @return User
     */
    protected function signInRole(string $role = ''): User
    {
        $user = User::factory()->create();

        $user->assignRole($role);

        $this->actingAs($user);

        return $user;
    }
}
