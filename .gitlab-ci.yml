stages:
  - setup
  - test
  - deploy_staging

setup:
  stage: setup
  image: gitlab.rrze.fau.de:4567/multimedia/tides
  before_script:
    - composer install --quiet --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
    - cp .env.example .env
    - php artisan key:generate
    - chmod -R 777 storage bootstrap/cache
    - mkdir -p /var/log/tides && chmod 777 /var/log/tides
    - mkdir -p database && touch database/database.sqlite
  script:
    - echo "Setup complete"
  artifacts:
    paths:
      - vendor/
      - node_modules/

test:
  stage: test
  image: gitlab.rrze.fau.de:4567/multimedia/tides
  before_script:
    - apt install php-curl -y
    - composer install --quiet --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
    - cp .env.example .env
    - php artisan key:generate
    - chmod -R 777 storage bootstrap/cache
    - mkdir -p /var/log/tides && chmod 777 /var/log/tides
    - mkdir -p database && touch database/database.sqlite
  script:
    - vendor/bin/pest --parallel

staging:
  stage: deploy_staging
  image: gitlab.rrze.fau.de:4567/multimedia/tides
  before_script:
    - export PATH="$PATH:~/.composer/vendor/bin"
    - composer global require laravel/envoy
    - composer install --quiet --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
    - cp .env.example .env
    - echo "DEPLOY_USER=$DEPLOY_USER" >> .env
    - echo "DEPLOY_GROUP=$DEPLOY_GROUP" >> .env
    - echo "DEPLOY_SERVER=$DEPLOY_SERVER" >> .env
    - echo "DEPLOY_REPO=$DEPLOY_REPO" >> .env
    - echo "DEPLOY_BRANCH=develop" >> .env
    - echo "DEPLOY_BASE_DIR=$DEPLOY_BASE_DIR" >> .env
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - vendor/bin/envoy run deploy-on-dev

